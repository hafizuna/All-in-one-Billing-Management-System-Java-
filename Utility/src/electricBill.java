
import com.mysql.cj.jdbc.result.ResultSetMetaData;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
//import javax.swing.text.Document;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Abrish
 */
public class electricBill extends javax.swing.JFrame {

    /**
     * Creates new form electricBill
     */
    public electricBill() {
        initComponents();
        Search();
        dt();
    }

    Connection con;
    PreparedStatement pst;
    ResultSet rs;

    public void Search() {
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/userreg", "root", "");
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void dt() {
        Date d = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("MMM-dd-yyy");
        String dd = sdf.format(d);
        date.setText(dd);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lastReading = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        currentReading = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        bill = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        print = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        close = new javax.swing.JButton();
        calculatePrice = new javax.swing.JButton();
        pay = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setLocation(new java.awt.Point(240, 180));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Electric Bill Payment");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 118, 38));

        jLabel7.setText("Last Month's Reading");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 220, -1, -1));
        getContentPane().add(lastReading, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, 85, -1));

        jLabel8.setText("Current Reading");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 220, -1, -1));
        getContentPane().add(currentReading, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 220, 120, -1));

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Customer's Detail");

        jLabel3.setText("Search By Billing Number");

        jLabel4.setText("Name");

        jLabel5.setText("Email");

        jLabel6.setText("Address");

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addGap(80, 80, 80)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bill, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(bill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, -1, -1));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Bill No", "Address", "Email", "Last M. Reading", "Current Reading", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 521, 184));

        jLabel9.setText("Price");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 290, -1, -1));
        getContentPane().add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 290, 103, -1));

        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });
        getContentPane().add(print, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 250, -1, -1));

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        getContentPane().add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 300, -1, -1));

        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        getContentPane().add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 350, -1, -1));

        calculatePrice.setText("Calculate");
        calculatePrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculatePriceActionPerformed(evt);
            }
        });
        getContentPane().add(calculatePrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 260, -1, -1));

        pay.setText("Pay");
        pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payActionPerformed(evt);
            }
        });
        getContentPane().add(pay, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 350, -1, -1));

        jLabel10.setText("Date");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 20, -1, -1));
        getContentPane().add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 20, 112, 16));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/NNN.jpg"))); // NOI18N
        jLabel12.setText("jLabel12");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 490));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        String b = bill.getText();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/userreg", "root", "");
            pst = (PreparedStatement) con.prepareStatement("select * from electric where billingnumber=?");
            pst.setString(1, b);

            rs = pst.executeQuery();
            if (rs.next()) {
                name.setText(rs.getString("name"));
                email.setText(rs.getString("email"));
                address.setText(rs.getString("address"));
                lastReading.setText(rs.getString("lastreading"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_searchActionPerformed

    private void calculatePriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculatePriceActionPerformed
        int current = Integer.parseInt(currentReading.getText());
        int last = Integer.parseInt(lastReading.getText());
        if (current >= last) {
            double Price = (current - last) * 0.25 + 5;
            price.setText(String.valueOf(Price));
        } else {
            JOptionPane.showMessageDialog(rootPane, "currentReading must be greater than lastReading");
        }

    }//GEN-LAST:event_calculatePriceActionPerformed

    private void payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payActionPerformed

        String b = bill.getText();
        String p = price.getText();
        String d = date.getText();
        int c;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/userreg", "root", "");

            //this is to display the currentReading value on the table
            PreparedStatement pst1 = con.prepareStatement("update electric set currentreading=? where billingnumber=?");
            pst1.setString(1, currentReading.getText());
            pst1.setString(2, b);
            pst1.executeUpdate();

            //adding price to table
            PreparedStatement pst5 = con.prepareStatement("update electric set price=? where billingnumber=?");
            pst5.setString(1, p);
            pst5.setString(2, b);
            pst5.executeUpdate();

            //adding date to electric table on db
            PreparedStatement pst6 = con.prepareStatement("update electric set date=? where billingnumber=?");
            pst6.setString(1, d);
            pst6.setString(2, b);
            pst6.executeUpdate();

            //displaying all paid datas to paid table
            PreparedStatement pst4 = con.prepareStatement("insert into paidtable(name, email, address, billingnumber, lastreading, currentreading, price, date) select name, email, address, billingnumber, lastreading, currentreading, price,date from electric where billingnumber=?");
            pst4.setString(1, b);
            pst4.executeUpdate();

            //this will be displayed on the table
            PreparedStatement pst = con.prepareStatement("select * from electric where billingnumber=?");
            pst.setString(1, b);
            ResultSet rs = pst.executeQuery();

            //this is to set the currentReading as lastReading after everything is displayed on the table
            PreparedStatement pst2 = con.prepareStatement("update electric set lastreading=? where billingnumber=?");
            pst2.setString(1, currentReading.getText());
            pst2.setString(2, b);
            pst2.executeUpdate();

            //this is to set the currentReading = 0 on the database 
            PreparedStatement pst3 = con.prepareStatement("update electric set currentreading=? where billingnumber=?");
            pst3.setString(1, "0");
            pst3.setString(2, b);
            pst3.executeUpdate();

            DefaultTableModel model = (DefaultTableModel) table.getModel();
            //model.setRowCount(0);
            while (rs.next()) {
                
               model.addRow(new String[]{rs.getString(1),rs.getString(2),rs.getString(4),  rs.getString(3),rs.getString(5),rs.getString(6),rs.getString(7)});
            }
            
            //bill.setText(null);
            name.setText(null);
            email.setText(null);
            address.setText(null);
            lastReading.setText(null);
            //currentReading.setText(null);
            price.setText(null);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        }
    }//GEN-LAST:event_payActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        bill.setText(null);
        name.setText(null);
        email.setText(null);
        address.setText(null);
        lastReading.setText(null);
        currentReading.setText(null);
        price.setText(null);
    }//GEN-LAST:event_resetActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_closeActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
       String b = bill.getText();
        
        try {
            String path = "C:\\Users\\Abrish\\Documents\\new.pdf";
            Document dc = new Document();
            PdfWriter.getInstance(dc, new FileOutputStream(path));
            
            dc.open();
            
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/userreg", "root", "");
            PreparedStatement pst = con.prepareStatement("select * from paidtable where billingnumber = ? AND currentReading=?");
            pst.setString(1, b);
            pst.setString(2, currentReading.getText());
            ResultSet rs = pst.executeQuery();
            
            
            Paragraph par = new Paragraph("Payment Summary");
            dc.add(par);
            dc.add(new Paragraph(" "));
            dc.add(new Paragraph(" "));
            dc.add(new Paragraph(" "));
            
            while(rs.next()){
                Paragraph par1 = new Paragraph("Name: "+rs.getString("name")+"\t         Email: "+rs.getString("email")+"\t          Address: "+rs.getString("address")+"\nLast Reading: "+rs.getString("lastreading")+ "\t          CurrentReading: "+rs.getString("currentreading")+ "\t          Price "+rs.getString("price")+" birr");
                dc.add(par1);
                dc.add(new Paragraph(" "));
            }
            
            
            dc.close();
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_printActionPerformed

    /**
     * @param args the command line arguments
     */
   /* public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new electricBill().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JTextField bill;
    private javax.swing.JButton calculatePrice;
    private javax.swing.JButton close;
    private javax.swing.JTextField currentReading;
    private javax.swing.JLabel date;
    private javax.swing.JTextField email;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastReading;
    private javax.swing.JTextField name;
    private javax.swing.JButton pay;
    private javax.swing.JTextField price;
    private javax.swing.JButton print;
    private javax.swing.JButton reset;
    private javax.swing.JButton search;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

}
